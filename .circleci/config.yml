version: 2.1
jobs:
  build:
    parallelism: 4
    docker:
      - image: cimg/ruby:3.1.2
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: meilisearch_engine
          RAILS_ENV: test
          REDIS_URL: redis://localhost:6379
          SECRET_KEY_BASE: db9f771130e52a01b1c243a02218eebe755c3d1f00e277213ede177107f0bc47380e1fecbb30dd1e64184ed4ab601ef3bf0c470cc7e06dcdf404c2dcf18434343
          S3_BUCKET_NAME: amazon_s3
          AWS_ACCESS_KEY_ID: AKIATXT3DTT
          AWS_SECRET_ACCESS_KEY: AKIATXT3DTTAKIATXT3DTT
          AWS_REGION: ap-southeast-2
      - image: circleci/postgres:12.4
        environment:
          POSTGRES_USER: meilisearch_engine
          POSTGRES_DB: meilisearch_engine_test
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: cimg/redis:6.2.6
    steps:
      - checkout
      - run: sudo apt-get update --allow-releaseinfo-change
      - run: sudo apt install -y postgresql-client || true

    # Install Bundler 2.4.6
      - run:
          name: Bundler Install 2.4.7
          command: gem install bundler:2.4.7
        
    #  Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

    # Install bundler  
      - run:
          name: Bundle Install
          command: bundle check || bundle install
        
    # Install NodeJS
      - run:
          name: Install NodeJS
          command: sudo apt-get install nodejs

    # Store bundle cache
      - save_cache:
          key: rails-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

    # Only necessary if app uses webpacker or yarn in some other way
      - run:

          name: install dockerize

          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

          environment:

            DOCKERIZE_VERSION: v0.3.0

    # Database
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

  # Trigger Web service and Sidekiq webhook
  deploy_production:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Trigger Deploy Bscexchange Finance
          command: |
            curl -s "https://api.render.com/deploy"
# Workflows
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              only:
                - master